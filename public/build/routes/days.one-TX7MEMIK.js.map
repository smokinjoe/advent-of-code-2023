{
  "version": 3,
  "sources": ["../../../app/components/DayForm.tsx", "../../../app/utils/string.ts", "../../../app/components/days/DayOne/partOne.ts", "../../../app/components/days/DayOne/partTwo.ts", "../../../app/components/days/DayOne/DayOne.tsx", "../../../app/routes/days.one.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/DayForm.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/DayForm.tsx\");\n  import.meta.hot.lastModified = \"1705373450796.968\";\n}\n// REMIX HMR END\n\nimport { useState } from \"react\";\nexport const DayForm = ({\n  day,\n  sourceUrl,\n  partOneHandler,\n  partTwoHandler\n}) => {\n  _s();\n  const [data, setData] = useState(\"\");\n  const [result, setResult] = useState(0);\n  const handlePartOneClick = () => {\n    const result = partOneHandler(data);\n    setResult(result);\n  };\n  const handlePartTwoClick = () => {\n    const result = partTwoHandler(data);\n    setResult(result);\n  };\n  return <div>\n      <h1>{`Day ${day}`}</h1>\n      <p>\n        <a href={sourceUrl} target=\"_blank\" rel=\"noreferrer\">\n          source\n        </a>\n      </p>\n      <div>\n        <textarea cols={20} rows={20} onChange={e => setData(e.target.value)} />\n      </div>\n      <div>\n        <button onClick={handlePartOneClick} disabled={data.length === 0}>\n          Run Part One\n        </button>\n      </div>\n      <div>\n        <button onClick={handlePartTwoClick} disabled={data.length === 0}>\n          Run Part Two\n        </button>\n      </div>\n\n      <div>\n        <input type=\"text\" value={result} readOnly />\n      </div>\n    </div>;\n};\n_s(DayForm, \"lPPNIaVXCkyJjcteeZgAkqYxseg=\");\n_c = DayForm;\nvar _c;\n$RefreshReg$(_c, \"DayForm\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/utils/string.ts\"\n);\nimport.meta.hot.lastModified = \"1705374423903.3572\";\n}\n// REMIX HMR END\n\nexport const convertMultiLineStringToArray = (\n  stringData: string\n): Array<string> => {\n  return stringData.split(\"\\n\").filter((x: unknown) => Boolean(x));\n};\n\nexport const isNumber = (value: string): boolean => !isNaN(Number(value));\n\n// TODO: add more characters\nexport const isSymbol = (value: string): boolean =>\n  value.match(/^[@#$%&*-+=//]*$/) ? true : false;\n\n/**\n * Day Three specific checkers\n */\nexport const dayThree = {\n  isEngineSymbol: (value: string): boolean => !isNumber(value) && value !== \".\",\n  isGear: (value: string): boolean => value === \"*\",\n};\n", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/components/days/DayOne/partOne.ts\"\n);\nimport.meta.hot.lastModified = \"1705374437086.2034\";\n}\n// REMIX HMR END\n\nimport { convertMultiLineStringToArray } from \"~/utils/string\";\n\n/**\n * Function to parse a string and extract numbers to form a two digit number\n * If there is only one digit, then it will be the first and second digit\n * @param {string} data - The string to parse\n * @return {number}\n */\nconst extractNumberFromString = (data: string): number => {\n  const stringArray = data.split(\"\");\n  const numbersArray: string[] = [];\n  stringArray.forEach((char: string) => {\n    if (!isNaN(parseInt(char))) {\n      numbersArray.push(char);\n    }\n  });\n\n  const firstDigit = parseInt(numbersArray[0]);\n  let secondDigit = parseInt(numbersArray[numbersArray.length - 1]);\n  if (isNaN(secondDigit)) {\n    secondDigit = firstDigit;\n  }\n  return firstDigit * 10 + secondDigit;\n};\n\nexport const partOneHandler = (data: string) => {\n  const stringArray = convertMultiLineStringToArray(data);\n  const numbersArray = stringArray.map((string) =>\n    extractNumberFromString(string)\n  );\n  let sumValue = 0;\n  numbersArray.forEach((number) => {\n    sumValue += number;\n  });\n\n  return sumValue;\n};\n", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/components/days/DayOne/partTwo.ts\"\n);\nimport.meta.hot.lastModified = \"1705374440737.6711\";\n}\n// REMIX HMR END\n\nimport { convertMultiLineStringToArray } from \"~/utils/string\";\n\nconst StringToNumberMap = {\n  one: 1,\n  two: 2,\n  three: 3,\n  four: 4,\n  five: 5,\n  six: 6,\n  seven: 7,\n  eight: 8,\n  nine: 9,\n} as const;\n\n// This is a type that is an array of the keys of the StringToNumberMap\ntype StringToNumberMapKeys = keyof typeof StringToNumberMap;\n\nconst parseString = (data: string): number => {\n  const charArray = data.split(\"\");\n\n  const numbersArray: number[] = [];\n\n  charArray.forEach((char: string, index: number) => {\n    if (!isNaN(parseInt(char))) {\n      numbersArray.push(parseInt(char));\n    }\n\n    let numberWord = \"\";\n    for (let i = index; i < charArray.length; i++) {\n      if (!isNaN(parseInt(charArray[i]))) {\n        break;\n      }\n      numberWord += charArray[i];\n\n      if (StringToNumberMap[numberWord as StringToNumberMapKeys]) {\n        numbersArray.push(\n          StringToNumberMap[numberWord as StringToNumberMapKeys]\n        );\n        numberWord = \"\";\n      }\n    }\n  });\n\n  const firstDigit = numbersArray[0];\n  const secondDigit = numbersArray[numbersArray.length - 1];\n\n  return firstDigit * 10 + secondDigit;\n};\n\nexport const partTwoHandler = (data: string): number => {\n  const stringArray = convertMultiLineStringToArray(data);\n  const numbersArray = stringArray.map((string) => parseString(string));\n  let sumValue = 0;\n  numbersArray.forEach((number) => {\n    sumValue += number;\n  });\n\n  return sumValue;\n};\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/days/DayOne/DayOne.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/days/DayOne/DayOne.tsx\");\n  import.meta.hot.lastModified = \"1705374462369.9417\";\n}\n// REMIX HMR END\n\nimport { DayForm } from \"~/components/DayForm\";\nimport { partOneHandler } from \"./partOne\";\nimport { partTwoHandler } from \"./partTwo\";\nexport const DayOne = () => {\n  return <DayForm day=\"One\" sourceUrl=\"https://adventofcode.com/2023/day/1\" partOneHandler={partOneHandler} partTwoHandler={partTwoHandler} />;\n};\n_c = DayOne;\nvar _c;\n$RefreshReg$(_c, \"DayOne\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/days.one.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/days.one.tsx\");\n  import.meta.hot.lastModified = \"1705376156993.5535\";\n}\n// REMIX HMR END\n\nimport { DayOne } from \"~/components/days/DayOne/DayOne\";\n\n// export const loader = async () => {\n//   const data = fs.readFileSync(\"/data/day1input.txt\", \"utf8\");\n//   return json({ data });\n// };\n\nexport default function DayOneRoute() {\n  return <DayOne />;\n}\n_c = DayOneRoute;\nvar _c;\n$RefreshReg$(_c, \"DayOneRoute\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["partOneHandler", "partTwoHandler", "result", "import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "_c"]
}
